From 2b05e9ea4c34b62f1d32f9e348877883f2e4683f Mon Sep 17 00:00:00 2001
From: tihmstar <tihmstar@gmail.com>
Date: Mon, 7 Dec 2020 12:33:01 +0100
Subject: [PATCH] added enable wifi sync

---
 tools/idevicepair.c | 56 ++++++++++++++++++++++++++++++++++++++++++---
 1 file changed, 53 insertions(+), 3 deletions(-)

diff --git a/tools/idevicepair.c b/tools/idevicepair.c
index 0dcd45f1b..f790a9f34 100644
--- a/tools/idevicepair.c
+++ b/tools/idevicepair.c
@@ -39,6 +39,11 @@
 #include <libimobiledevice/lockdown.h>
 
 static char *udid = NULL;
+typedef enum {
+       WIFI_SHOW,
+       WIFI_ENABLE,
+       WIFI_DISABLE
+} t_wifi;
 
 static void print_error_message(lockdownd_error_t err)
 {
@@ -78,6 +83,7 @@ static void print_usage(int argc, char **argv)
 	printf("  validate     validate if device is paired with this host\n");
 	printf("  unpair       unpair device with this host\n");
 	printf("  list         list devices paired with this host\n");
+	printf("  wifi <on/off>    enable/disable wifi connections\n");
 	printf("\n");
 	printf("The following OPTIONS are accepted:\n");
 	printf("  -u, --udid UDID  target specific device by UDID\n");
@@ -107,8 +113,9 @@ int main(int argc, char **argv)
 
 	char *type = NULL;
 	char *cmd;
+	t_wifi wifiopt = WIFI_SHOW;
 	typedef enum {
-		OP_NONE = 0, OP_PAIR, OP_VALIDATE, OP_UNPAIR, OP_LIST, OP_HOSTID, OP_SYSTEMBUID
+		OP_NONE = 0, OP_PAIR, OP_VALIDATE, OP_UNPAIR, OP_LIST, OP_HOSTID, OP_SYSTEMBUID, OP_WIFI
 	} op_t;
 	op_t op = OP_NONE;
 
@@ -166,7 +173,22 @@ int main(int argc, char **argv)
 		op = OP_HOSTID;
 	} else if (!strcmp(cmd, "systembuid")) {
 		op = OP_SYSTEMBUID;
-	} else {
+	} else if (!strcmp(cmd, "wifi")) {
+		op = OP_WIFI;
+		if ((argc - optind) < 2) {
+			wifiopt = WIFI_SHOW;
+		}else{
+			if (!strcmp((argv+optind+1)[0], "on")) {
+				wifiopt = WIFI_ENABLE;
+			}else if (!strcmp((argv+optind+1)[0], "off")){
+				wifiopt = WIFI_DISABLE;
+			}else{
+				printf("ERROR: Invalid wifi command option '%s' specified\n", (argv+optind+1)[0]);
+				print_usage(argc, argv);
+				exit(EXIT_FAILURE);
+			}
+		}
+	}else {
 		printf("ERROR: Invalid command '%s' specified\n", cmd);
 		print_usage(argc, argv);
 		exit(EXIT_FAILURE);
@@ -287,6 +309,35 @@ int main(int argc, char **argv)
 			print_error_message(lerr);
 		}
 		break;
+
+		case OP_WIFI:
+		{
+			lockdownd_client_free(client);
+			client = NULL;
+			lerr = lockdownd_client_new_with_handshake(device, &client, "idevicepair");
+			if (wifiopt == WIFI_SHOW) {
+				plist_t node;
+				if((lerr = lockdownd_get_value(client, "com.apple.mobile.wireless_lockdown", "EnableWifiConnections", &node)) == LOCKDOWN_E_SUCCESS) {
+					if (node) {
+						printf("EnableWifiConnections: %s\n",plist_bool_val_is_true(node) ? "yes" : "no");
+						plist_free(node);
+						node = NULL;
+					}
+				}else {
+					result = EXIT_FAILURE;
+					print_error_message(lerr);
+				}
+			}else{
+				lerr = lockdownd_set_value(client, "com.apple.mobile.wireless_lockdown", "EnableWifiConnections", plist_new_bool(wifiopt == WIFI_ENABLE));
+				if (lerr == LOCKDOWN_E_SUCCESS) {
+					printf("SUCCESS: setting wifi to %s\n", wifiopt == WIFI_ENABLE ? "on" : "off");
+				} else {
+					result = EXIT_FAILURE;
+					print_error_message(lerr);
+				}
+			}
+			break;
+		}
 	}
 
 leave:
@@ -296,4 +347,3 @@ int main(int argc, char **argv)
 
 	return result;
 }
-
